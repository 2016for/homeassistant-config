
##################################################
## Commands
shell_command:
  updateha: /home/homeassistant/.homeassistant/scripts/update_ha.sh
  restartha: sudo systemctl restart home-assistant.service
  rebootpi: sudo reboot
  restartmonitor: /home/homeassistant/.homeassistant/scripts/restart_monitor.sh
  updatemonitor: /home/homeassistant/.homeassistant/scripts/update_monitor.sh


##################################################
## Scripts
script:

  # Update HA
  updateha:
    alias: Update Home Assistant
    sequence:
      - service: shell_command.updateha

  # Restart Home Assistant
  restartha:
    alias: Restart Home Assistant
    sequence:
      - service: shell_command.restartha

  # Reboot Raspberry Pi
  rebootpi:
    alias: Reboot Raspberry Pi
    sequence:
      - service: shell_command.rebootpi

  # Restart Monitor
  restartmonitor:
    alias: Restart Monitor
    sequence:
      - service: shell_command.restartmonitor

  # Update Monitor
  updatemonitor:
    alias: Update Monitor
    sequence:
      - service: shell_command.updatemonitor


##################################################
## Sensors

sensor:
  - platform: rest
    name: Home Assistant Release
    resource: https://api.github.com/repos/home-assistant/home-assistant/releases/latest
    username: !secret github_username
    password: !secret github_access_token
    authentication: basic
    value_template: '{{ value_json.tag_name }}'
    headers:
      Accept: application/vnd.github.v3+json
      Content-Type: application/json
      User-Agent: Home Assistant REST sensor

  - platform: version


#################################################################
## Automations
automation:

  # Notify when HA update is available
  - alias: Home Assistant Release Check

    trigger:
    - platform: state
      entity_id: sensor.home_assistant_release
    - platform: homeassistant
      event: start

    condition:
      condition: template
      value_template:  "{{ states('sensor.home_assistant_release') != states('sensor.current_version') }}"

    action:
      - service: notify.html5
        data:
          title: 'New Home Assistant Release - {{ states("sensor.home_assistant_release") }}'
          message: 'Home Assistant update is now available. - {{now().strftime("%l:%M %P")}}'
          data:
            requireInteraction: true

  # Set HA theme on startup
  - alias: 'Set theme at startup'
    initial_state: 'on'
    trigger:
      - platform: homeassistant
        event: start

    action:
      service: frontend.set_theme
      data:
        name: dark

  # Restart Monitor and nodes on boot to reacquire state of users
  - alias: 'Restart Monitor and nodes on boot'
    initial_state: 'on'
    trigger:
      - platform: homeassistant
        event: start

    action:
      - delay: '00:00:10'
      - service: script.restartmonitor
